version: "3"
services:
    
    backend:
        image: django-lms
        build: .
        container_name: backend
        stdin_open: true
        tty: true
        depends_on:
            - postgres
            - broker
        volumes:
            - "./:/project/code"
        ports:
            - "8000:8000"
        env_file:
            - .env

    celery:
        image: django-lms
        build: .
        container_name: celery
        command: celery -A lms worker --loglevel info --pidfile=/tmp/celery.pid
        stdin_open: true
        tty: true
        volumes:
            - "./:/project/code"
        depends_on:
            - backend
            - postgres
            - broker
        env_file:
            - .env

    celerybeat:
        image: django-lms
        build: .
        container_name: celerybeat
        command: celery -A lms beat --loglevel info --schedule=/tmp/celerybeat-schedule --pidfile=/tmp/celerybeat.pid
        stdin_open: true
        tty: true
        volumes:
            - "./:/project/code"
        depends_on:
            - backend
            - postgres
            - broker
        env_file:
            - .env

    flower:
        build: ./
        image: mher/flower
        container_name: flower
        command: celery -A lms flower --address=0.0.0.0 --port=5555
        stdin_open: true
        tty: true
        ports:
            - "5555:5555"
        depends_on:
            - backend
            - postgres
            - broker
        env_file:
            - .env

    broker:
        image: rabbitmq:3.10.2-management-alpine
        container_name: rabbitmq
        ports:
            - "5672:5672"
        env_file:
            - .env

    postgres:
        image: postgres:14.3-alpine
        container_name: postgres
        ports:
            - "5432:5432"
        env_file:
            - .env
        volumes:
            - db_data:/var/lib/posgresql/data

    pgadmin:
      container_name: pgadmin4_container
      image: dpage/pgadmin4
      restart: always
      env_file:
          - .env
      ports:
        - "5050:80"

    nginx:
        image: nginx
        container_name: nginx
        depends_on:
            - backend
        ports:
            - "80:80"
        volumes:
            - "./default.conf:/etc/nginx/conf.d/default.conf:ro"


volumes:
    db_data: {}
